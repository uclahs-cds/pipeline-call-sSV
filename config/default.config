import nextflow.util.SysHelper

docker {
    enabled = true
    // Pass user's UID/GID and group IDs to Docker
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }

params {
    max_cpus   = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    min_cpus = 1
    min_memory = 1.MB

    genome_build = 'hg38'

    other_jvm_heap = 4.GB

    cache_intermediate_pipeline_steps = false

    ucla_cds = true

    // SVision param
    svision_min_mapq = 10

    blcds_registered_dataset = false

    docker_container_registry = "ghcr.io/uclahs-cds"

    // Pipeline tool versions
    delly_version = '1.5.0'
    manta_version = '1.6.0'
    gridss2_version = '2.13.2'
    bcftools_version = '1.15.1'
    pipeval_version = '4.0.0-rc.2'
    circlize_version = '0.4.16_vcfR-1.15.0_BoutrosLab.plotting.general-7.1.0'
    svision_version = '1.4'

    // Docker tool versions
    docker_image_delly = "${-> params.docker_container_registry}/delly:${params.delly_version}"
    docker_image_manta = "${-> params.docker_container_registry}/manta:${params.manta_version}"
    docker_image_gridss2 = "${-> params.docker_container_registry}/gridss:${params.gridss2_version}"
    docker_image_bcftools = "${-> params.docker_container_registry}/bcftools:${params.bcftools_version}"
    docker_image_validate = "${-> params.docker_container_registry}/pipeval:${params.pipeval_version}"
    docker_image_circlize = "${-> params.docker_container_registry}/circlize:${params.circlize_version}"
    docker_image_svision = "${-> params.docker_container_registry}/svision:${params.svision_version}"
    }

process {
    executor = 'local'
    echo = true
    cache = true
    }
